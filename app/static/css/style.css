html {
    font-size: 20px;
    font-family: Arial, Helvetica, sans-serif;
}


/* figures */

.tick-mark {
    position: relative;
    display: inline-block;
    width: 80%;
    height: 80%;
}

.tick-mark::before {
    position: absolute;
    left: 0;
    top: 50%;
    height: 50%;
    width: 3px;
    background-color: black;
    content: "";
    transform: translateX(10px) rotate(-45deg);
    transform-origin: left bottom;
}

.tick-mark::after {
    position: absolute;
    left: 0;
    bottom: 0;
    height: 3px;
    width: 100%;
    background-color: black;
    content: "";
    transform: translateX(10px) rotate(-45deg);
    transform-origin: left bottom;
}


.loader {/*.loader类定义了一个圆形边框的加载器，其中顶部边框颜色为黑色，其他边框为浅灰色，
    这个加载器会应用一个名为spin的动画来创建旋转效果。这个类通常用于显示网页上的加载状态，通过旋转的动画来告知用户内容正在加载或处理中*/
    border: 3.5px solid lightgrey; /* Light grey */
    border-top: 3.5px solid black; /* Blue */
    border-radius: 50%;
    animation: spin 2s linear infinite;
    position: relative;
    display: inline-block;
    width: 60%;
    height: 60%;
}
/*
border: 3.5px solid lightgrey;设置了元素边框的宽度为3.5像素。边框样式为实线（solid）。边框颜色为浅灰色（lightgrey）。
border-top: 3.5px solid black;单独设置了元素顶部边框的样式，覆盖了上面border属性中对于顶部的设置。顶部边框的宽度为3.5像素。
顶部边框样式为实线。顶部边框颜色为黑色。由于其他三个边框（底部、左侧、右侧）保持为lightgrey，而顶部边框为black，这通常用于创建一个视觉上的“旋转”效果，特别是在动画中。

border-radius: 50%;设置了元素的边框圆角为50%，这将使元素呈现为一个完美的圆形。
animation: spin 2s linear infinite;为元素应用了一个名为spin的动画。动画的持续时间为2秒。动画的速度曲线是线性的（即匀速）。动画将无限次循环播放（infinite）。
注意：这个spin动画的具体行为没有在这段代码中定义，通常它会在CSS的另一个地方（可能是在同一个文件的不同部分，或者在另一个CSS文件中）定义。

position: relative;设置了元素的定位方式为相对定位。这意味着，如果元素内部有绝对定位的子元素，这些子元素将相对于这个元素进行定位。
display: inline-block;设置元素的显示方式为内联块级元素。这意味着元素会像内联元素一样排列，但可以设置宽度和高度。
width: 60%;设置元素的宽度为其父元素宽度的60%。
height: 60%;设置元素的高度为其父元素高度的60%。
*/


@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}
.border {
    border: 3px solid black;
}

.bubble {
    width: 110px;
    border: 3px solid black;
    padding: 5px;
    text-align: center;
    color: black;
    position: absolute;
    top: -75px;
    left: 60px;
    border-radius: 20px;
    /*animation: 0.3s linear popup;*/
    display: flex;
    flex-direction: row;
    justify-content: center;
    --bubble-after-color: white;
}

.bubble:before {
    content: "";
    width: 0px;
    height: 0px;
    position: absolute;
    border-left: 9px solid black;
    border-right: 9px solid transparent;
    border-top: 9px solid black;
    border-bottom: 9px solid transparent;
    left: 20.56px;
    bottom: -20px;
}

.bubble:after {
    content: "";
    width: 0px;
    height: 0px;
    position: absolute;
    border-left: 10px solid var(--bubble-after-color);
    border-right: 10px solid transparent;
    border-top: 10px solid var(--bubble-after-color);
    border-bottom: 10px solid transparent;
    left: 24px;
    bottom: -13px;
}

.bubble > p {
    margin: auto 0 auto 0;
    font-size: 18px;
}

@keyframes popup {
    0% { scale: 0; }
    100% { scale: 100% }
}

.br_small {
    display: block;
    margin-bottom: 8px;
}

.br_big {
    display: block;
    margin-bottom: 30px;
}


/* specific forms */

.bold {
    font-weight: bold;
}

.italic {
    font-style: italic;
}

.underline {
    text-decoration: underline;
    text-underline-position: under;
}



/* general types */

h1 {
    text-align: center;
    margin-bottom: 30px;
    margin-top: 0px;
}


table {
    table-layout: fixed;
    padding: 20px;
}

button {
    width: 120px;
    height: 40px;
    margin: auto;
    cursor: pointer;
}

input[type=checkbox] {
    width: 20px;
    height: 20px;
    cursor: pointer;
}

input[type=range] {
    width: 600px;
    -webkit-appearance: none;
    background: linear-gradient(to right, blue, white, red);

}

input[type=radio] {
    margin-left: 25px;
    margin-right: 10px;
}

select {
    width: 140px;
}

img {
    margin-top: 5px;
    display: block;
    width: 100%;
}

label {
    cursor: pointer;
}


/* specific general types */

.body_homepage {
    padding: 30px 100px 30px 100px;
}

.body_homepage > h1{
    margin-bottom: 50px;
}

.p_centered {
    text-align: center;
}

.img_mark {
    position: absolute;
    width: 40px;
    top: -40px;
}

.table_answers {
    table-layout: fixed;
    width: 100%;
    line-height: 15px;
    font-size: 15px;
}

.table_answers > td {
    border-radius: 5px;
}

.th_name {
    font-size: 12px;
    width: 15%;
    vertical-align: top;
    height: 20px;
}

.th_summary {
    width: 55%;
    height: 20px;
}

.td_summary {
    height: 30px;
    text-align: left;
}

.td_answer {
    border-radius: 5px;
}

.td_ans_name {
    width: 120px;
}

.tr_margin {
    height: 5px;
}

.p_instruction {
    margin: 0px
}

.button_small {
    width: 80px;
    height: 30px;
    font-size: 15px;
    margin-left: 5px;
}

.button_big {/*一个固定展示的大号button*/
    display: block;
    width: 300px;
    margin-top: 30px;
    font-size: 18px;
}

.button_big_choose {/*一个固定展示的大号button,设计在抽签环节使用*/
    display: block;
    width: 300px;
    font-size: 18px;

    position: fixed;
    left: 50%;
    transform: translateX(-50%);
    bottom: 130px; /* 距离页面底部的距离 */
}

.form_ideology {
    text-align: left;
    border: 1px dashed grey;
    width: 300px;
    border-radius: 15px;
    padding: 5px;
    font-size: 18px;
    line-height: 25px;
    padding: 10px 0px 10px 0px;
}

/* class types */

.quiz_body {
    padding: 30px 50px 30px 50px;
}

.end > h1 {
    margin-top: 50px;
    margin-bottom: 50px;
}

.rules {
    padding: 10px 30px 30px 30px;
}

.status {
    display: inline-block;
    width: 20px;
    height: 20px;
}
/*display: inline-block;：将元素显示为内联块级元素。内联块级元素既具有块级元素的特点，又不会独占一行，可以与其他内联元素在同一行显示，并且可以设置宽度和高度等属性。
width: 20px;：设置元素的宽度为 20 像素。
height: 20px;：设置元素的高度为 20 像素。
这些样式定义了一个具有 20 像素宽度和高度的内联块级元素，通常用于表示某种状态或图标的小型元素。*/

.split {
    height: 100%;
    position: absolute;
    top: 0;
}

.splits_wrap {
    position: relative;
}

.phase_0_left {
    width: 55%;
    left: 0;
    border-right: 2px solid black;
}

.phase_0_right {
    width: 40%;
    right: 0;
}

.phase_0_right > form {
    text-align: center;
}

.pseudonyms_list {
    line-height: 40px;
    padding: 10px;
    border: 5px dashed lightgray;
    margin-bottom: 30px;
}
.avatar_notification {
    line-height: 25px;
    padding: 5px;
}


.pseudonym_choice {
    display: inline-block;
    padding: 5px;
    height: 20px;
    border: 1px solid black;
    border-radius: 5px;
    cursor: pointer;
}

.pseudonym_choice:hover {
    scale: 1.1;
}

.pseudonym_choice > p {
    position: relative;
    margin: 0px;
    top: -10px;
}


.avatar_choice {
    width: 70px;
    border-radius: 5px;
	box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    cursor: pointer;
}

.avatar_choice > img {
    width: 100%;
}

.avatar_choice:hover {
    scale: 1.05;
}

.identity_chosen {
    border: 3px solid black;
    border-radius: 10px;
    padding-bottom: 15px;
    width: 200px;
    height: 225px;
    margin: auto;
    text-align: center;
    margin-bottom: 30px;
    margin-top: 30px;
    position: relative;
}

.identity_chosen > img {
    height: 200px;
}

.identity_chosen > span {
    text-align: center;
    /* position: absolute; */
    /* opacity: 0; */
    font-size: 25px;
}

.identity_wrap {
    display: flex;/*identity_wrap 类的元素是一个flex容器*/
    flex-direction: row;/*这指定了flex容器中的子元素（flex items）应该沿着水平方向（行）排列*/
    justify-content: space-around;/*space-around 值意味着子元素之间的空间以及子元素与容器边缘的空间都是相等的。这实际上是在子元素之间和子元素与容器边缘之间都添加了等量的空间。*/
    margin: auto;
    /*这设置了元素的外边距（margin）。当元素的左右外边距都设置为 auto 时（在这个例子中，由于 margin: auto; 应用于一个flex容器，它实际上会尝试在容器中水平居中，但这取决于容器的父元素是否也设置了相关的样式，比如 display: flex; 和 justify-content: center;）。但请注意，在这个特定的上下文中，margin: auto; 可能不会对flex容器本身产生太大的影响，除非它的父元素也是一个flex容器*/
    text-align: center;/*文本居中*/
}

.avatars_list {
    border: 5px dashed lightgray;
    flex-flow: row wrap;
    justify-content: space-around;
    padding: 15px;
    row-gap: 10px;
    margin-bottom: 50px;
}

.wait_status {
    width: 510px;
}

.answer_status {
    width: 90%;
    margin-top: 70px;
    margin-bottom: 50px;
}


.labeling_wrap {
    justify-content: space-evenly;
    margin-top: 30px;
}

.profile_waiting {
    width: 150px;
    position: relative;
    text-align: center;
}

.profile_waiting > img {
    height: 150px;
}


/*.profile_labeling类将应用于一个元素，使其具有一个黑色的实线边框、
圆角、宽度为其父元素的27%，以及10px的内边距。这通常用于样式化如个人资料卡、标签或其他需要边框和内边距的容器元素*/



.profile_answering {
    border: 2px solid black;
    border-radius: 10px;
    width: 120px;
    position: relative;
    max-width: 250px;
    padding: 0px;
    height: 70px;
}
/*这个.profile_answering类可能用于为某种特定的内容容器（如一个用于回答问题的区域）提供样式。
使用相对定位意味着该元素可能包含绝对定位的子元素，而宽高比和最大宽度的设置则确保了元素在视觉上的一致性和响应性。*/

.profile_with_labels {
    border: 0px;
    border-radius: 10px;
    width: 30%;
    position: relative;
    aspect-ratio: 5 / 3;
    @supports not (aspect-ratio: 5 / 3) {
        &::before {
          float: left;
          padding-top: 60%;
          content: "";
        }
    
        &::after {
          display: block;
          content: "";
          clear: both;
        }
    }
    max-width: 250px;
    padding: 0px;
    
}
/*border: 0px;: 将元素的边框宽度设置为 0 像素，即没有边框。
border-radius: 10px;: 设置元素的边框半径为 10 像素，使元素具有圆角边框。
width: 30%;: 将元素的宽度设置为其父元素宽度的 30%。
position: relative;: 将元素设置为相对定位，使其相对于其正常位置进行定位。
aspect-ratio: 5 / 3;: 设置元素的宽高比为 5:3，这确保了元素的宽度是其高度的 5/3 倍。
max-width: 250px;: 设置元素的最大宽度为 250 像素，以防止元素在超出指定宽度时过度放大。
padding: 0px;: 将元素的内边距设置为 0 像素，即没有内边距。*/

.profile_with_labels > .status {/*在相对资料卡片的右上角位置绝对定位，显示状态answering、not answering的设定*/
    position: absolute;
    top: 5px;
    right: 5px;
    width: 30px;
    height: 30px;
}
/*position: absolute;: 将 .status 元素设置为绝对定位，这意味着它会相对于其最近的已定位祖先元素进行定位。
top: 5px;: 将 .status 元素的顶部边距设置为距离其包含元素顶部 5 像素的位置。
right: 5px;: 将 .status 元素的右侧边距设置为距离其包含元素右侧 5 像素的位置。
width: 30px;: 将 .status 元素的宽度设置为 30 像素。
height: 30px;: 将 .status 元素的高度设置为 30 像素。
这些样式将 .status 元素定位在其父元素 .profile_with_labels 的右上角，宽度和高度都为 30 像素。*/

.identity_part_phase_2 {
    width: 100%;
    height: 100px;
    font-size: 18px;
    margin: auto;
}

.image_part_phase_2 {
    width: 60px;
    margin: auto;
}

.evaluation {
    padding: 0 0 35px 30px;
    border: 1px dashed;
    border-radius: 15px;
    width: 670px;
    margin-bottom: 40px;
}

.profile_border {
    width: 110%;
    height: 114%;
    border: 3px dotted black;
    position: absolute;
    top: -9%;
    left: -6%;
    border-radius: 15px;
}


.identity_part_phase_4 {
    font-size: 15px;
    width: 40px;
}

.labels_pool {
    text-align: left;
    font-size: 18px;
}



/*.labels_part > .status {/*原来phaseII在右下角正在回答的样子，现在右上角,这是原来放在labels-part下面的样式
    position: absolute;
    /*bottom: 12px;
    top: 5px;
    right: 5px;
    width: 28px;
    height: 28px;
}*/

.identity_part > .status {/*原来phaseII在右下角正在回答的样子，现在右上角，现在放到identity下的样式*/
    position: absolute;
    /*bottom: 12px;*/
    top: 15px;
    right: 10px;
    width: 30px;
    height: 30px;
}
/*position: absolute;：将元素的位置设定为绝对定位，相对于其最近的非 static 定位的父元素。
width: 65%;：设置元素的宽度为其父元素宽度的 65%。
height: 100%;：设置元素的高度为其父元素的高度。
right: 0;：将元素的右侧边缘与其包含块的右边缘对齐。
border-radius: 10px;：设置元素的边框圆角为 10 像素。
text-align: left;：设置元素内文本的水平对齐方式为左对齐。
font-size: min(1.5vw, 18px);：设置元素内文本的字体大小为动态计算值，取浏览器视口宽度的 1.5%，最小为 18px。
line-height: min(1.2vw, 15px);：设置元素内文本的行高为动态计算值，取浏览器视口宽度的 1.2%，最小为 15px。
对于 .labels_part > .status 类：

position: absolute;：将元素的位置设定为绝对定位。
bottom: 12px;：将元素的底部边缘与其包含块的底部边缘距离为 12 像素。
right: 5px;：将元素的右侧边缘与其包含块的右边缘距离为 5 像素。
width: 30px;：设置元素的宽度为 30 像素。
height: 30px;：设置元素的高度为 30 像素。
这些样式共同定义了一个标签部分的外观和布局。*/

.profile_answering > .status {/*原来在右下角正在回答的样子，phaseI*/
    position: absolute;
    bottom: 15px;
    right: 5px;
    width: 30px;
    height: 30px;
}

.profile_to_fill {
    position: relative;
    padding: 15px;
    border-radius: 10px;
}


.label {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    /*为元素添加了一个盒子阴影效果。它实际上定义了两个阴影效果，用逗号分隔。第一个阴影的偏移量是水平0、垂直4像素，模糊半径是8像素，扩展半径是0，颜色是半透明的黑色（rgba中的0.2透明度）。
    第二个阴影的偏移量是水平0、垂直6像素，模糊半径是20像素，扩展半径是0，颜色是稍微透明一点的黑色（rgba中的0.19透明度）。*/
    border-radius: 5px;
    height: 30px;
    padding: 5px;
    display: inline-block;
    margin-left: 5px;
    font-size: 18px;
    cursor: move;
}
/*.label类可能用于创建一个可拖动的标签或按钮，它有一个明显的圆角边框和阴影效果，用于在用户界面上突出显示或标识某些内容。*/

.label > p {
    margin: 0px;
    position: relative;
    top: -3px;
}

.label_small {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
    border-radius: 5px;
    width: 80px;
    font-size: 12px;
    line-height: 18px;
    margin-bottom: 7px;
}

.label:hover {
    scale: 1.1;
}

.label_chosen {
    cursor: pointer;
}

.label_chosen:hover {
    scale: 1.05;
    color: grey;
}

.label_pool {
    margin: 20px;
    line-height: 40px;
    padding: 15px;
    border: 5px dashed lightgray;
    margin-bottom: 0;
}

.instruction {
    text-align: center;
    height: 50px;
    margin: auto;
    padding: 10px;
    border-radius: 10px;
    line-height: 30px;
    margin-top: 20px;
}

.instruction_phase_0 {
    margin-top: 10%;
}

.instruction_phase_2 {
    text-align: left;
    padding: 20px 50px 0px 50px;
}

.instruction_phase_3 {
    min-height: 50px;
    font-size: 18px;
    padding: 15px 30px 15px 30px;
    text-align: center;
    line-height: 25px;
    display: none;/*原来flex*/
    justify-content: center;
    align-items: center;
    margin-bottom: 50px;
}
/*min-height: 50px;：设置元素的最小高度为 50 像素。如果内容高度小于这个值，元素会被撑开至至少 50px 的高度。
font-size: 18px;：设置元素内文本的字体大小为 18 像素。
padding: 15px 30px 15px 30px;：设置元素的内边距（上、右、下、左），分别为 15px、30px、15px、30px。这意味着元素内容与其边框之间的空间。
text-align: center;：设置元素内文本的水平对齐方式为居中。
line-height: 25px;：设置元素内文本的行高为 25 像素。
display: flex;：将元素声明为 Flexbox 容器，以便使用 Flexbox 布局。
justify-content: center;：设置 Flexbox 容器内项目在主轴（横轴）上的对齐方式为居中。
align-items: center;：设置 Flexbox 容器内项目在交叉轴（纵轴）上的对齐方式为居中。
margin-bottom: 50px;：设置元素的下外边距为 50 像素。这会在元素的下方创建 50px 的空白间隔。
这些样式一起为具有 .instruction_phase_3 类名的元素定义了一个居中对齐、垂直居中、具有一定最小高度和内边距的外观。*/

.instruction_big_margin {
    margin-top: 12%;
}

.caption {
    font-size: 15px;
}

.question {
    font-size: 22px;
    margin: auto;
    width: 82%;
    margin-top: 10%;
    line-height: 25px;
    font-weight: bold;
    text-align: center;
}

.question_phase_3 {
    margin-top: 3%;
    /*定义一个元素顶部的外边距（margin），并且这个外边距的大小是相对于其父元素的宽度的百分比。
具体来说，如果一个元素的父元素有一个已知的高度，那么设置 margin-top: 13%; 将使得这个元素的顶部外边距的大小为其父元素的高度的13%。
如果元素的父元素没有明确设置高度，那么这个百分比将是相对于父元素的包含块的高度。*/
    /*font-weight: bold;*/
   /* font-size: 30px;*/
   text-align: left; /* 左对齐 */
}

.operation {
    margin-top: 30px;
    text-align: center;
}

.statement {
    font-style: italic;
    width: 75%;
    line-height: 30px;
    margin: auto;
    margin-top: 30px;
    text-align: center;
}

.statement_phase_3 {
    font-style: italic;/*将文本设置成斜体*/
    margin-top: 3%;
    /*font-size: 30px;*/
    text-align: left; /* 左对齐 */
}

.container_parent_phaseII_statement_answer {
    width: 100%;
    height: 65%;
    position: relative;
    /* 添加其他样式，如背景色等 */
  }

.left {
    width: calc(80% - 170px);
    left: 0;
    border-right: 3px solid lightgrey;
    min-height: 100%;
    height: min-content;
}

.right {
    width: calc(20% + 170px);
    right: 0;
}

.profile_split {
    height: 100%;
    top: 0;
    position: absolute;
}

.profile_left {
    width: 100px;
    left: 0;
}

.profile_right {
    width: 80px;
    right: 0;
}

.answers_side {
    height: calc(100% - 60px);
    text-align: center;
}

.answers_side > h3 {
    margin-top: 40px;
    margin-bottom: 0px;
}

.tracked_input {
    scale: 0.6;
    position: relative;
    left: calc(20% - 147px);
    margin-bottom: 5px;
    margin-top: 5px;
}

.answer_title {
    font-size: 15px;
}

.summary {
    font-style: italic;
    font-size: 15px;
}

#slider_value {
    font-weight: bold;
    font-size: 25px;
}

.answer_choices {
    display: flex;
    flex-direction: row;
    margin: auto;
    justify-content: space-around;
    margin-top: 20px;
    width: 300px;
    padding: 15px;
    border: 5px dashed lightgray;
}

.answer_choice {
    border: 2px solid black;
    font-size: 18px;
    border-radius: 10px;
    aspect-ratio: 2.25;
    @supports not (aspect-ratio: 2.25) {
        &::before {
          float: left;
          padding-top: 44.4%;
          content: "";
        }
    
        &::after {
          display: block;
          content: "";
          clear: both;
        }
    }
    width: 120px;
    position: relative;
    cursor: pointer;
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.answer_choice > p {
    text-align: center;
    margin: auto 0px auto 6px;
}

.answer_choice:hover {
    scale: 1.1;
}

.input {
    width: 600px;
    margin: auto;
    position: relative;
    margin-top: 55px;
}

.input_phase_4 {
    margin-left: 0;
}

.scale {
    position: absolute;
    height: 9px;
    border-left: 1px solid lightgray;
    z-index: -1;
}

.scales {
    position: absolute;
    top: 0px;
}

.mark_texts {
    position: absolute;
    top: 25px;
}

.mark_text {
    position: absolute;
    line-height: 12px;
    font-size: 12px;
    margin: 0pt;
    text-align: center;
}

.answers_mark {
    position: absolute;
    top: 0px;
    
}

.answer_scale {
    position: absolute;
    height: 22px;
    border-left: 3px solid black;
    left: 53px;
    border-radius: 20px;
}

.avatar_scale_phase_4 {
    width: 30px;
    position: absolute;
    bottom: 3px;
}

.pseudonym_scale_phase_4 {
    position: absolute;
    font-size: 16px;
    bottom: 5px;
    font-weight: bold;

}

.answer_text {
    position: absolute;
    font-size: 20px;
    top: -22px;
    width: 100px;
}

.radios {
    position: relative;
}

.answering_now > .profile_content {
    opacity: 1;/*透明度以1为标准是完全不透明*/
/*20240515,不需要虚线！！*/
    /*outline: 2px dashed black;/*轮廓线的宽度为 2 像素，样式为虚线，颜色为黑色*/
    /*outline-offset: 10px;/*指定了轮廓线与边框之间的距离为 10 像素，即轮廓线将会比边框更靠外*/
    /*现在我不需要轮廓线！！*/
}


/*.finish_answering {
    outline: 2px dashed black;/*轮廓线的宽度为 2 像素，样式为虚线，颜色为黑色*/
    /*outline-offset: 12px;  20240515删除了该功能
}*/

.finish_answering > .profile_content {
    /*opacity: 0.2;/*回答完成后的透明度变成0.2,通过透明度调整是否正在回答问题*/
    opacity: 1;/*20240515,不希望变成浅灰色*/

}

.not_answering_now {
    outline: 0px;
}

.not_answering_now > .profile_content {
    opacity: 0.2;
}

.concealed {
    opacity: 0.3;
}

.test_wrap {
    position: absolute;
    bottom: 10px;
    left: 10px;
}

.attention_check {
    padding: 50px 80px;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 800px;
    border: 2px solid #000;
    margin: 0 auto;
}


.attention_check > div > h1 {
    margin-bottom: 60px;
}

.attention_check > div > p {
    margin: 0 0 60px;
}

.attention_check .phase2-label-container {
    top: 0;
    font-weight: bold;
}

.attention_check .range-text-phase-2 {
    top: 15px;
    font-weight: bold;
}

.attention_check .range-container-phase-2 {
    width: 100%;
    margin: 0 0 80px;
}

.attention_check .range-marker-phase-2 {
    transform: translate(0, -50%);
}

.attention_form {
    font-size: 24px;
}

.attention_form .form_item {
    display: flex;
    align-items: center;
    margin: 0 20px 0 0;
    padding: 15px 0;
}

.attention_form .form_item .item_label {

}

.detection_wrap {
    padding: 10px;
    border-radius: 15px;
    width: 680px;
    line-height: 30px;
}

.radio-group {
    display: inline-block; /* 将每个选项包裹的 div 元素设置为内联块元素，使得它们在同一行显示 */
    margin-right: 20px; /* 设置选项之间的间距 */
}
/*让选项在同一行显示*/

.each_detection {
    /* margin: 0px 50px 0px 50px; */
}

.each_detection > img {
    width: 50px;
    margin: auto;
}

.each_detection > form {
    margin-top: 10px;
}

.name_in_detection {
    text-align: center;
    font-size: 15px;
    line-height: 15px;
    font-weight: bold;
}

.offline_instruction {
    width: 70%;
    font-weight: bold;
    text-align: center;
    font-size: 30px;
    margin: auto;
    margin-top: auto;
    line-height: 60px;
    margin-top: 15%;
}

#reason {
    width: 80%;
    height: 100px;
    resize: none;
}





/*.label-Conservative {  
    color: red; /* 红色文字 
}  

.label-Somewhat-conservative {  
    color: rgba(255, 0, 183, 0.996); /* 蓝色文字 
}  
  
.label-Liberal {  
    color: blue; /* 蓝色文字 
}  

.label-Somewhat-liberal {  
    color: rgb(0, 170, 255); /* 蓝色文字 
}  

.label-Kind {  
    color: green; /* 红色文字   
}  

.label-Indifferent {  
    color: purple; /* 蓝色文字  
}  
  
.label-Mature {  
    color: green; /* 蓝色文字 
}  

.label-Naive {  
    color: purple; /* 蓝色文字   
}  

.label-Competent {  
    color: green; /* 红色文字 
}  

.label-Incompetent {  
    color: purple; /* 蓝色文字 
}  
  */
  
  .question_phase_2 {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    border: 1px solid #ccc;
    padding: 20px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
}

.arrow-container {
    margin: auto 0 auto 0;
}

.arrow {
    stroke: black;
    width: 40px;
    height: 40px;
    fill: white;
}

.arrow-history {
    width: 30px;
    height: 30px;
}

.arrow-option {
    width: 40px;
    height: 40px;
}

.arrow-answer {
    width: 30px;
    height: 30px;
}

.ranges-phase-2 {
    margin-bottom: 100px;
    -webkit-user-select: none;  /* Safari */
    -moz-user-select: none;     /* Firefox */
    -ms-user-select: none;      /* Internet Explorer/Edge */
    user-select: none;          /* Standard syntax */
}

.instruction-phase-2 {
    padding: 50px 50px 0 50px;
    line-height: 25px;
}

.range-container-phase-2 {
    width: 80%;
    margin: 80px auto 0 auto;
    display: flex;
    flex-direction: row;
    justify-content: left;
}

.range-container-phase-2 > p {
    width: 100px;
    margin: auto;
    text-align: center;
    margin-right: 20px;
}

.range-scale-phase-2 {
    position: absolute;
    /*border-left: 2.5px solid black;*/
    /*border-right: 2.5px solid black;*/
    height: 15px;
    width: 4.76%;
    bottom: -4.5px;
    left: calc(0% - 2.5px);
}

.range-marker-phase-2 {
    width: calc(4.76% - 2px);

    &::before {
        float: left;
        padding-top: 100%;
        content: "";
    };

    &::after {
        display: block;
        content: "";
        clear: both;
    };
    border: 2px solid black;
    border-radius: 50%;
    position: absolute;
    transform: translate(-50%, -50%);
    left: 50%;
    top: 50%;
    background-color: #ededed;
    cursor: grab;
    z-index: 10;
}

.range-marker-phase-2 span.label-1 {
    left: 50%;
    top: 0;
    transform: translate(-50%, -150%);
    position: absolute;
    font-size: 20px;
}

.range-text-phase-2 {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    position: relative;
    top: 3px;
}

.range-text-phase-2 > p {
    font-size: 13px;
    width: calc(100% / 21);
    text-align: center;
    padding: 20px 0 0;
    margin: 0;
}

.range-labels {
    display: flex;
    justify-content: space-between;
    width: 100%;
    position: absolute;
    top: 32px;
}

.range-label {
    flex: 1;
    font-size: 16px;
    text-align: center;
    position: relative;
    /*transform: translateX(-50%);*/
}

:root {
   --color0: #0000ff;
   --color1: #1919ff;
   --color2: #3333ff;
   --color3: #4d4dff;
   --color4: #6666ff;
   --color5: #8080ff;
   --color6: #9999ff;
   --color7: #b3b3ff;
   --color8: #ccccff;
   --color9: #e5e5ff;
   --color10: white;
   --color11: #ffe5e5;
   --color12: #ffcccc;
   --color13: #ffb3b3;
   --color14: #ff9999;
   --color15: #ff8080;
   --color16: #ff6666;
   --color17: #ff4d4d;
   --color18: #ff3333;
   --color19: #ff1a1a;
   --color20: #ff0000;
}

/* :root {
    --color0: rgb(19, 59, 255);
    --color1: rgb(55, 89, 252);
    --color2: rgb(92, 118, 249);
    --color3: rgb(128, 148, 246);
    --color4: rgb(164, 178, 243);
    --color5: rgb(201, 207, 240);
    --color6: #ededed;
    --color7: rgb(240, 206, 201);
    --color8: rgb(243, 175, 166);
    --color9: rgb(246, 144, 130);
    --color10: rgb(249, 113, 94);
    --color11: rgb(252, 82, 59);
    --color12: rgb(255, 51, 23);
} */

.trust-question-container {
    width: 80%;
    text-align: left;
    margin-left: auto;
    margin-right: auto; /* 添加这一行，使容器水平居中 */
    padding: 10px;
    background-color: white;
    box-shadow: 0px -2px 10px rgba(0, 0, 0, 0.1);
    margin-top: 5px;
}

.trust_detection {
    margin: 0px 50px 0px 50px;
}

.trust_detection form {
    display: flex;
    align-items: center;
    justify-content: space-between;
}

.trust_detection label {
    margin-right: 10px; /* 调整选项之间的间距 */
    flex: 1; /* 让每个选项占据相等的空间 */
}
